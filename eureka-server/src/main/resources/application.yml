server:
  port: 9000 #端口号
spring:
  application:
    name: "eureka-server" #服务名
eureka:
  client:
    register-with-eureka: false #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
    fetch-registry: false #是否从Eureka获取注册信息
    service-url:
      defaultZone: http://localhost:${server.port}/eureka/ # eureka服务器的地址（注意：地址最后面的 /eureka/ 这个是固定值）
    #registry-fetch-interval-seconds: 30 #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    #instance-info-replication-interval-seconds: 30 #复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
    #initial-instance-info-replication-interval-seconds: 40 #最初复制实例信息到eureka服务器所需的时间（s），默认为40秒
    #eureka-service-url-poll-interval-seconds: 300 #询问Eureka服务url信息变化的时间间隔（s），默认为300秒
    #proxy-host: #获取eureka服务的代理主机，默认为null
    #proxy-port: #获取eureka服务的代理端口, 默认为null
    #proxy-user-name: #获取eureka服务的代理用户名，默认为null
    #proxy-password: #获取eureka服务的代理密码，默认为null
    #g-zip-content: true #eureka注册表的内容是否被压缩，默认为true，并且是在最好的网络流量下被压缩
    #eureka-server-read-timeout-seconds: 8 #eureka需要超时读取之前需要等待的时间，默认为8秒
    #eureka-server-connect-timeout-seconds: 5 #eureka需要超时连接之前需要等待的时间，默认为5秒
    #backup-registry-impl: #获取实现了eureka客户端在第一次启动时读取注册表的信息作为回退选项的实现名称
    #eureka-server-total-connections: 200 # eureka客户端允许所有eureka服务器连接的总数目，默认是200
    #eureka-server-total-connections-per-host: 50 #eureka客户端允许eureka服务器主机连接的总数目，默认是50
    #eureka-server-u-r-l-context: #表示eureka注册中心的路径，如果配置为eureka，则为http://x.x.x.x:x/eureka/，在eureka的配置文件中加入此配置表示eureka作为客户端向注册中心注册，从而构成eureka集群。此配置只有在eureka服务器ip地址列表是在DNS中才会用到，默认为null
    #eureka-server-port: #获取eureka服务器的端口，此配置只有在eureka服务器ip地址列表是在DNS中才会用到。默认为null
    #eureka-server-d-n-s-name: # 获取要查询的DNS名称来获得eureka服务器，此配置只有在eureka服务器ip地址列表是在DNS中才会用到。默认为null
    #use-dns-for-fetching-service-urls: false # eureka客户端是否应该使用DNS机制来获取eureka服务器的地址列表，默认为false
    #prefer-same-zone-eureka: true #实例是否使用同一zone里的eureka服务器，默认为true，理想状态下，eureka客户端与服务端是在同一zone下
    #allow-redirects: false #服务器是否能够重定向客户端请求到备份服务器。 如果设置为false，服务器将直接处理请求，如果设置为true，它可能发送HTTP重定向到客户端。默认为false
    #log-delta-diff: false #是否记录eureka服务器和客户端之间在注册表的信息方面的差异，默认为false
    #disable-delta: false #默认为false 表示eureka客户端是否应禁用delta的提取，而应该使用获取完整的注册表信息。请注意，增量提取可以极大地减少流量，因为使用eureka服务器的更改速率通常远低于提取速率。这些更改在运行时在registryFetchIntervalSeconds指定的下一个注册表获取周期中有效
    #fetch-remote-regions-registry: #eureka服务注册表信息里的以逗号隔开的地区名单，如果不这样返回这些地区名单，则客户端启动将会出错。默认为null
    #region: us-east-1 #获取实例所在的地区。默认为us-east-1
    #availability-zones: #获取实例所在的地区下可用性的区域列表，用逗号隔开。
    #filter-only-up-instances: true #是否获得处于开启状态的实例的应用程序过滤之后的应用程序。默认为true
    #eureka-connection-idle-timeout-seconds: 30 #Eureka服务的http请求关闭之前其响应的时间，默认为30 秒
    #registry-refresh-single-vip-address: #此客户端只对一个单一的VIP注册表的信息感兴趣。默认为null
    #heartbeat-executor-exponential-back-off-bound: 10 #  心跳执行程序回退相关的属性，是重试延迟的最大倍数值，默认为10
    #heartbeat-executor-thread-pool-size: 2 #心跳执行程序线程池的大小,默认为2
    #cache-refresh-executor-thread-pool-size: 2 #执行程序缓存刷新线程池的大小，默认为2
    #cache-refresh-executor-exponential-back-off-bound: 10 #执行程序指数回退刷新的相关属性，是重试延迟的最大倍数值，默认为10
    #dollar-replacement: _- # eureka服务器序列化/反序列化的信息中获取“$”符号的的替换字符串。默认为“_-”
    #escape-char-replacement: __ #eureka服务器序列化/反序列化的信息中获取“_”符号的的替换字符串。默认为“__”
    #on-demand-update-status-change: true #如果设置为true,客户端的状态更新将会点播更新到远程服务器上，默认为true
    #encoder-name: # 这是一个短暂的编码器的配置，如果最新的编码器是稳定的，则可以去除，默认为null
    #decoder-name: #这是一个短暂的解码器的配置，如果最新的解码器是稳定的，则可以去除，默认为null
    #client-data-accept: #客户端数据接收
  instance:
    lease-expiration-duration-in-seconds: 90 #服务失效时间，Eureka多长时间没收到服务的renew操作，就剔除该服务，默认90秒
  server:
    eviction-interval-timer-in-ms: 6000 #eureka server清理无效节点的时间间隔，默认60000毫秒
    enable-self-preservation: true # 自我保护模式（缺省为打开）
